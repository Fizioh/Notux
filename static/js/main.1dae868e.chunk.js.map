{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","newTodo","Date","now","payload","push","toggleComplete","index","findIndex","todo","deleteTodo","filter","actions","AddTodoForm","useState","value","setValue","dispatch","useDispatch","onSubmit","event","preventDefault","className","type","placeholder","onChange","target","TodoItem","checked","onClick","class","TodoList","todos","useSelector","map","TotalCompleteItems","completedTodos","length","App","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"oOAEMA,EAAYC,YAAY,CAC1BC,KAAM,QACNC,aAAc,CACV,CAAEC,GAAI,EAAGC,MAAO,UAAQC,WAAW,GACnC,CAAEF,GAAI,EAAGC,MAAO,OAAQC,WAAW,GACnC,CAAEF,GAAI,EAAGC,MAAO,sBAAiBC,WAAW,IAEhDC,SAAU,CACNC,QAAS,SAACC,EAAOC,GACb,IAAMC,EAAU,CACZP,GAAIQ,KAAKC,MACTR,MAAOK,EAAOI,QAAQT,MACtBC,WAAW,GAEfG,EAAMM,KAAKJ,IAEfK,eAAgB,SAACP,EAAOC,GACpB,IAAMO,EAAQR,EAAMS,WAAU,SAACC,GAAD,OAAUA,EAAKf,KAAOM,EAAOI,QAAQV,MACnEK,EAAMQ,GAAOX,UAAYI,EAAOI,QAAQR,WAE5Cc,WAAY,SAACX,EAAOC,GAChB,OAAOD,EAAMY,QAAO,SAACF,GAAD,OAAUA,EAAKf,KAAOM,EAAOI,QAAQV,U,EAUjEJ,EAAUsB,QAHVd,E,EAAAA,QACAQ,E,EAAAA,eACAI,E,EAAAA,WAGWpB,IAAf,Q,OCCeuB,EAhCK,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAGnBC,EAAWC,cAWjB,OACC,uBAAMC,SAVU,SAACC,GACjBA,EAAMC,iBACNJ,EACCnB,EAAQ,CACPH,MAAOoB,MAMiBO,UAAU,wBAApC,UACC,uBAAOA,UAAU,UAAjB,kBACA,uBACCC,KAAK,OACLD,UAAU,iCACVE,YAAY,oBACZT,MAAOA,EACPU,SAAU,SAACL,GAAD,OAAWJ,EAASI,EAAMM,OAAOX,UAG5C,wBAAQQ,KAAK,SAASD,UAAU,uBAAhC,0BCKYK,EA7BE,SAAC,GAA8B,IAA5BjC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACxBqB,EAAWC,cAUjB,OACC,oBAAII,UAAS,0BAAqB1B,GAAa,kCAA/C,SACC,sBAAK0B,UAAU,iCAAf,UACC,uBAAMA,UAAU,4BAAhB,UACC,uBACCC,KAAK,WACLD,UAAU,OACVM,QAAShC,EACT6B,SAhBuB,WAC3BR,EAASX,EAAe,CAACZ,GAAIA,EAAIE,WAAYA,QAiBzCD,KAEF,qBAAKkC,QAjBkB,WACzBZ,EAASP,EAAW,CAAChB,GAAIA,MAgBU4B,UAAU,OAA3C,SAAkD,mBAAGQ,MAAM,4CCZhDC,EAZE,WAChB,IAAMC,EAAQC,aAAY,SAAClC,GAAD,OAAWA,EAAMiC,SAE3C,OACC,oBAAIV,UAAU,aAAd,SACEU,EAAME,KAAI,SAACzB,GAAD,OACV,cAAC,EAAD,CAAUf,GAAIe,EAAKf,GAAIC,MAAOc,EAAKd,MAAOC,UAAWa,EAAKb,kBCI/CuC,EAXY,WAC1B,IAAMC,EAAiBH,aAAY,SAAClC,GAAD,OACnCA,EAAMiC,MAAMrB,QAAO,SAACF,GAAD,OAA4B,IAAnBA,EAAKb,gBAEjC,OACC,8BACA,qBAAI0B,UAAU,uBAAd,wCAAgE,sBAAMA,UAAU,eAAhB,SAAgCc,EAAeC,eCWlGC,G,MAbH,WACX,OACC,sBAAKhB,UAAU,8BAAf,UAEC,oBAAIA,UAAU,wBAAd,mBAEA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCZYiB,cAAe,CAC1BC,QAAU,CACNR,MAAOS,KCEfC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACC,cAAC,EAAD,QAGFC,SAASC,eAAe,W","file":"static/js/main.1dae868e.chunk.js","sourcesContent":["import { createSlice} from '@reduxjs/toolkit';\r\n\r\nconst todoSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState: [\r\n        { id: 1, title: \"Café\", completed: false},\r\n        { id: 2, title: \"Code\", completed: false},\r\n        { id: 3, title: \"Café numéro 2\", completed: true},\r\n    ],\r\n    reducers: {\r\n        addTodo: (state, action) => {\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                title: action.payload.title,\r\n                completed: false\r\n            };\r\n            state.push(newTodo);\r\n        },\r\n        toggleComplete: (state, action) => {\r\n            const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n            state[index].completed = action.payload.completed;\r\n        },\r\n        deleteTodo: (state, action) => {\r\n            return state.filter((todo) => todo.id !== action.payload.id);\r\n        }\r\n    },\r\n\r\n});\r\n\r\nexport const { \r\n    addTodo,\r\n    toggleComplete,\r\n    deleteTodo,\r\n} = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../redux/todoSlice';\n\nconst AddTodoForm = () => {\n\tconst [value, setValue] = useState('');\n\n\tconst dispatch = useDispatch();\n\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tdispatch(\n\t\t\taddTodo({\n\t\t\t\ttitle: value,\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<form onSubmit={onSubmit} className='form-inline mt-3 mb-3'>\n\t\t\t<label className='sr-only'>Name</label>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tclassName='form-control mb-2 mr-sm-2 ml-5'\n\t\t\t\tplaceholder='Ajouter une tache'\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event) => setValue(event.target.value)}\n\t\t\t></input>\n\n\t\t\t<button type='submit' className='btn btn-primary mb-2'>\n\t\t\t\tCréer\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default AddTodoForm;\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport {toggleComplete, deleteTodo}  from '../redux/todoSlice';\n\n\nconst TodoItem = ({ id, title, completed }) => {\n\tconst dispatch = useDispatch();\n\n\tconst handleCompleteClick = () => {\n\t\tdispatch(toggleComplete({id: id, completed: !completed}))\n\t}\n\tconst handleDeleteClick = () => {\n\t\tdispatch(deleteTodo({id: id}))\n\t}\n\n\n\treturn (\n\t\t<li className={`list-group-item ${completed && 'list-group-item-success delete' }`}>\n\t\t\t<div className='d-flex justify-content-between'>\n\t\t\t\t<span className='d-flex align-items-center'>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='checkbox' \n\t\t\t\t\t\tclassName='mr-5'\n\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t\tonChange={handleCompleteClick}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t{title}\n\t\t\t\t</span>\n\t\t\t\t<btn onClick={handleDeleteClick} className='btn '><i class=\"far fa-times-circle text-danger\"></i></btn>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector } from 'react-redux';\n\nconst TodoList = () => {\n\tconst todos = useSelector((state) => state.todos);\n\n\treturn (\n\t\t<ul className='list-group'>\n\t\t\t{todos.map((todo) => (\n\t\t\t\t<TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst TotalCompleteItems = () => {\n\tconst completedTodos = useSelector((state) => \n\tstate.todos.filter((todo)=> todo.completed === true)\n\t);\n\treturn (\n\t\t<div>\n\t\t<h4 className='mt-4 mr-1 text-right'>Nombres de taches finies : <span className=\"text-success\">{completedTodos.length}</span></h4>\n\t\t</div>\n\t)\n};\n\nexport default TotalCompleteItems;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList';\nimport TotalCompleteItems from './components/TotalCompleteItems';\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className='container bg-white p-4 mt-5'>\n\n\t\t\t<h1 className=\"text-center text-info\">Notux</h1>\n\n\t\t\t<AddTodoForm />\n\t\t\t<TodoList />\n\t\t\t<TotalCompleteItems />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer:  {\r\n        todos: todoReducer,\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}